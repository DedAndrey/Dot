#### Pacman ####

# Установка пакетов
pacman -S имя_пакета_1 имя_пакета_2

# Пакет имеет несколько версий в разных репозиториях
pacman -S extra/имя_пакета

# Установка группы пакетов
pacman -S group

# Список пакетов в группе
pacman -Sg group

# Установка пакетов из списка
pacman -S $(cat pkglist)

# Поиск пакетов для установки по названию
pacman -Ss имя_пакета

# Поиск пакетов для установки по названию (с подробностями)
pacman -Si имя_пакета

# Загрузка пакета без установки
pacman -Sw имя_пакета

# Установка пакета из файла
pacman -U /путь/к/пакету/имя_пакета-версия.tar.xz

# Установка пакета из файла и сохранение в кэше
pacman -U file://путь/к/пакету/имя_пакета-версия.pkg.tar.xz

# Установка пакета из сети
pacman -U http://www.example.com/repo/example.pkg.tar.xz

# Поиск среди установленных пакетов
pacman -Qs условие

# Список файлов установленного пакета
pacman -Ql имя_пакета

# Список явно установленных пакетов
pacman -Qe

# Пакеты, загруженные и установленные вручную
pacman -Qm

# Пакетов, установленные из официальных репозиториев
pacman -Qn

# Пакеты, не доступные в официальных репозиториях
pacman -Qem

# Пакеты, доступные в официальных репозиториях
pacman -Qen

# Проверка наличия файлов, установленных пакетом
pacman -Qk имя_пакета

# Тщательная проверка наличия файлов, установленных пакетом
pacman -Qkk имя_пакета

# Какому пакету принадлежит нужный файл
pacman -Qo /путь/к/файлу/имя_файла

# Отображение зависимостей в виде дерева
pactree имя_пакета

# Пакеты, которые зависят от установленного пакета
pactree -r имя_пакета

# Просмотреть список установленных пакетов
pacman -Qqe | grep -v "$(pacman -Qmq)"

# Сохранить список установленных пакетов
pacman -Qqe | grep -v "$(pacman -Qmq)" > pkglist

# Просмотреть список пакетов "сирот"
pacman -Qdt

# Пакеты, которые опционально нужны другим 
pacman -Qdttq

# Пакеты, установлены явно и от которых не зависят другие пакеты
pacman -Qet

# Удалить пакет
pacman -R имя_пакета

# Удалить пакет с зависимостями (не используемыми другими пакетами)
pacman -Rs имя_пакета

# Удалить пакет с зависимыми и зависящими пакетами
pacman -Rsc имя_пакета

# Удалить пакет, игнорируя зависимости
pacman -Rdd имя_пакета

# Удалить пакеты "сироты"
pacman -Rsn $(pacman -Qdtq)

# Удалить резервные копии конфигурационных файлов удаляемых приложений
pacman -Rn имя_пакета

## Работа с кэшем ##

# Очистка кэша
pacman -Sc

# Полная очистка кэша пакетов (осторожно!)
pacman -Scc

# Удалить из кэша все версии каждого пакета, кроме трех недавно использовавшихся
paccache -r

# Обновление системы
pacman -Syu

# Выполнение обновления системы, а также проверка наличия обновлений пакета разработки и использование времени изменения PKGBUILD (не номер версии) для определения обновления
yay -Syu --devel --timeupdate

#### AUR ####

# Установка пакетов
yay -S имя_пакета

# Установка пакетов без подтверждения
yay -S --noconfirm имя_пакета

# Удаление пакетов
yay -Rns имя_пакета

# Поиск
yay -Ss

# Подробный поиск
yay -Si

# Обновление
yay -Syu

# Обновление списка пакетов
yay -Pu (список для обновления)

# Включить пакеты разработки
yay -Syu --devel --timeupdate

# Очистка кэша
yay -Sc

# Удалить пакеты "сироты"
yay -Yc

# Системная статистика
yay -Ps

# Создать базу данных пакета разработки, используемую для обновлений devel
yay -Y --gendb

# cat ~/Загрузки/Keys | awk '/^[a-z]/ && last {print $0,"\t",last} {last=""} /^#/{last=$0}' | column -t -s $'\t' | fzf

#### Latex ####

# Установленная версия Latex
latex -v

# Запуск конфигуратора Latex
tlmgr -gui

# Установить TeX-пакет Latex
tlgmr install <package name>

# Обновить пакет Latex
tlgmr update <package name>

# Обновить все пакеты Latex
tlmgr update -all

# Обновить конфигуратор Latex
tlmgr update --self

#### Git ####

# Создание репозитория в существующей директории
git init

# Клонирование существующего репозитория
git clone [url]

# Определение состояния файлов
git status

# Сокращенный вывод состояния
git status -s (git status --short)

# Что конкретно поменялось?
git diff

# Добавить под версионный контроль существующие файлы
git add --all

# Эта команда сравнивает ваши индексированные изменения с последним коммитом
git diff --staged

# Удаление файлов из-под версионного контроля
git rm

# Зафиксировать изменения
git commit

# Просмотр истории коммитов
git log

# Просмотр удаленных репозиториев
git remote

# Отправить в удаленный репозиторий
git push

# Отправить в удаленный репозиторий (с метками)
git push --tags

# Получение изменений из удаленного репозитория
git fetch [remote-name]

# Получение изменений и слияние с локальным
git pull

# Просмотр удаленного репозитория
git remote show [remote-name]

# Создание аннотированной метки
git tag -a v1.4 -m 'my version 1.4'

# Создание метки позже
git tag -a v1.2 9fceb02

# Просмотр метки вместе с коммитом
git show v1.4

# Создание легковесной метки (без -a, -s, -m)
git tag v1.4-lw

# Просмотр меток
git tag

#### Epy ####

# Сменить цветовой профиль epy
c

# Предыдущая глава epy
Shift + h

# Следующая глава epy
Shift + l

# Перейти к концу главы epy
Shift + g

# Перейти к началу главы epy
g

# Показать метаданные книги epy
Shift + m

# Содержание epy
t

# Поиск epy
/

# Добавить закладку epy
b

# Показать закладки epy
Shift + b

# Выход epy
q

# Уменьшить текст epy
-

# Увеличить текст epy
+

# Открыть изображение epy
o

# Показать или скрыть прогресс epy
s

#### newsraft ####

# Обновить выделенное newsraft
r

# Обновить все newsraft
Ctrl-R

# Пометить прочитанным newsraft
d

# Пометить непрочитанным newsraft
D

# Пометить прочитанным все newsraft
Ctrl-D

# Пометить важным newsraft
i

# Пометить неважнам newsraft
I

# Копировать ссылку в буфер обмена newsraft
y

# Открыть ссылку в браузере newsraft
o

# Режим обзора newsraft
e

# Поиск newsraft
/

# Пометить непрочитанным все newsraft
Ctrl-P

# Просмотр картинок newsraft
f

# Запустить mpv в фоне newsraft
m

# Запустить mpv newsraft
M
