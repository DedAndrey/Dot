#### Общее ####
# открыть помощь для keyword
:h[elp] keyword
# сохранить как file
:sav[eas] file
# закрыть текущую панель
:clo[se]
- открыть окно терминала
:ter[minal]
# открыть справочное руководство для слова под курсором
K

#### Редактирование файлов ####
# редактировать файл (с поиском по имени)
:e[dit] **/filename.c
# сохранить файл, но не выходить
:w [fname]
# сохранить изменения во всех файлах
:wa
# сохранить изменения и выйти во всех файлах
:wqa
# сохранить файл и выйти
:wq или :x или ZZ
# сохранение по root'ом
:w !sudo tee %
# выйти из редактора
:q
# выйти из редактора, не сохраняя изменения
:q! или ZQ
# возвращаем предыдущее состояние документа
:earlier 1m
# возврат к последнему состоянию документа
:later

#### Работа с окнами ####
# горизонтальное разбиение
Ctrl + ws или :split
# вертикальное разбиение
Ctrl + wv или :vsplit
# переключение окон
Ctrl + ww
# закрыть окно
Ctrl + wq или Ctrl + wc
# поменять местами текущее окно со следующим
Ctrl + wx
# изменение высоты текущего окна
Ctrl + w+/-
# изменение ширины текущего окна
Ctrl + w</>
# выровнять размеры всех окон
Ctrl + w=
# перемещение между окнами
Ctrl + w(hjkl) или стрелочки

#### Редактирование нескольких файлов (Буферы) ####
# редактировать файл в новом буфере
:e[dit] file
# перейти к следующему буферу
:bn[ext]
# перейти к предыдущему буферу
:bp[revious]
# удалить буфер (закрыть файл)
:bd[elete]
# перейти к буферу N
:b[uffer]N
# перейти к буферу file
:b[uffer] file
# список всех открытых буферов
:ls или :buffers
# открыть файл в новом буфере и разделить окно
:sp[lit] file
# открыть файл в новом буфере и вертикально разделить окно
:vs[plit] file
# редактировать все буферы как вертикальные окна
:vert[ical] ba[ll]
# редактировать все буферы как вкладки
:tab ba[ll]

## Plugin 'jeetsukumaran/vim-buffergator' ##
# <leader>
обычно это \
# окно со списком всех буферов
<Leader>b
# закрыть окно со списком всех буферов
<Leader>B или q
# окно со списком всех вкладок
<Leader>to
# закрыть окно со списком всех вкладок
<Leader>tc или q
# пролистать список буферов
Ctrl-n (или SPACE)
# пролистать список буферов в обратную сторону
Ctrl-p (или Ctrl-SPACE)
# открыть
o или ENTER
# открыть, но оставить фокус на списке
go
# открыть в новом горизонтальном сплите
s или Ctrl-S
# открыть в новом горизонтальном сплите, но оставить фокус на списке
S
# открыть в новом вертикальном сплите
i или Ctrl-V
# открыть в новом вертикальном сплите, но оставить фокус на списке
I
# открыть в новой вкладке
t или Ctrl-T
# пролистать стек буферов, не открывая список
gb (или Мета-b)
# пролистать стек буферов, не открывая список, в обратную сторону
gB (или Мета-Shift-b)
# перейти к буферу по номеру
(number)[b
# перейти к буферу по номеру, в обратную сторону
(number)]b
# сплит нового окна
\LEFT, \UP, \RIGHT, \DOWN

## Plugin 'scrooloose/nerdtree' ##
# передать фокус
<leader>n
# включить
Ctrl+n
# переключить состояние отображения
Ctrl+t
# поиск
Ctrl+f
# распахнуть на весь экран
Shift+A

#### Навигация ####
# передвинуть курсор влево
h
# передвинуть курсор вниз
j
# передвинуть курсор вверх
k
# передвинуть курсор вправо
l
# переместиться к началу экрана
H
# переместиться к середине экрана
M
# переместиться к концу экрана
L
# переместиться вперед на начало слова
w
# переместиться вперед на начало слова (слово может содержать пунктуацию)
W
# переместиться вперед на конец слова
e
# переместиться вперед на конец слова (слово может содержать пунктуацию)
E
# переместиться назад на начало слова
b
# переместиться назад на начало слова (слово может содержать пунктуацию)
B
# перейти к парному символу (поддерживаются пары: '()', '{}', '[]')
%
# переместиться на начало строки
0
# переместиться на первый непробельный символ строки
^
# переместиться на конец строки
$
# переместиться к последнему непустому символу в строке
g_
# переместиться на первую строку документа
gg
# переместиться на последнюю строку документа
G
# переместиться на пятую строку
5gg или 5G
# перейти на строку N
:<N>
# переместиться к следующему вхождению символа x
fx
# переместиться перед следующим вхождением символа x
tx
# переместиться к предыдущему вхождению символа x
Fx
# переместиться перед предыдущим вхождением символа x
Tx
# повторить предыдущее f, t, F или T перемещение
;
# повторить предыдущее f, t, F или T перемещение, в обратную сторону
,
# переместиться к следующему параграфу (или функции/блоку при редактировании кода)
}
# переместиться к предыдущему параграфу (или функции/блоку при редактировании кода)
{
# перемотка, текст под курсором остается по центру
zz
# перемотка вверх без движения курсора
Ctrl + e
# перемотка вниз без движения курсора
Ctrl + y
# переместиться назад на целый экран
Ctrl + b
# переместиться назад на половину экрана
Ctrl + u
# переместиться вперед на целый экран
Ctrl + f
# переместиться вперед на половину экрана
Ctrl + d
# возвращение к предыдущему местонахождению
Ctrl + o
# возвращение к первоначальному местонахождению
Ctrl + i

#### Вставка/Добавление ####
# вставка перед курсором
i
# вставка в начало строки
I
# вставка (добавление) после курсора
a
# вставка (добавление) в конец строки
A
# добавление новой строки под текущей
o
# добавление новой строки над текущей
O
# вставка (добавление) после конца слова
ea
# удаление символа перед курсором в режиме вставки
Ctrl + h
# удаление слова перед курсором в режиме вставки
Ctrl + w
# начало новой строки в режиме вставки
Ctrl + j
# отступ (перемещение вправо) строки на один шаг в режиме вставки
Ctrl + t
# реотступ (перемещение влево) строки на один шаг в режиме вставки
Ctrl + d
# вставка (автозавершение) следующего совпадения перед курсором в режиме вставки
Ctrl + n
# вставка (автозавершение) предыдущего совпадения перед курсором в режиме вставки
Ctrl + p
# вставить содержимое регистра x
Ctrl + rx
# выход из режима вставки/добавления
Esc

#### Редактирование ####
# заменить один символ
r
# писать поверх имеющегося текста??????????????????????????????????????????????????????
R
# присоединить нижнюю строку к текущей
J
# присоединить нижнюю строку к текущей без пробела между ними
gJ
# reflow параграф
gwip
# переключить регистр текста
g~
# привести к нижнему регистру
gu
# привести к верхнему регистру
gU
# заменить всю строку
cc
# заменить до конца строки????????????????????????????????????????????????????????
C или c$
# заменить до конца слова
cw
# заменить слово
ciw
# удалить символ и заменить текст
s
# удалить строку и заменить текст (то же что cc)??????????????????????????????????
S
# отмена предыдущего действия (undo)
u или :u[ndo]
# восстановить (undo) последнюю измененную строку
U
# отмена отмены предыдущего действия (redo)
Ctrl + r или :red[o]
# повторить последнюю команду
.

#### Выделение ####
# включить режим выделения текста
v
# включить построчный режим выделения
V
# переместиться на другой конец выделенной области
o
# включить режим выделения блоком
Ctrl + v
# переместить на другой угол блока
O
# выделить слово???????????????????????????????????????????????????????????
aw, viw
# выделить строку
Shift + v или 0v$
# выделить на N строк вниз
vNj
# выделить строку, начиная с первого непробельного символа
^v$
# выделить все между ближайшими, в данном случае круглыми, скобками
vi(
# выделить все между ближайшими, в данном случае круглыми, включая сами скобки
va(
# выделить все до ближайшей запятой
vt,
# выделить параграф
vip
# добавить блок в () тэгах
ab или a(
# добавить блок в {} тэгах
aB или a{
# добавить блок в <> тэгах
at
# вставить внутренний блок в () тэгах
ib
# вставить внутренний блок в {} тэгах
iB
# вставить внутренний блок в <> тэгах
it
# сдвинуть текст вправо
>
# сдвинуть текст влево
<
# сдвинуть строку вправо
>>
# сдвинуть строку влево
<<
# сдвинуть вправо блок с () или {} (курсор внутри скобок)
>%
# сдвинуть вправо внутренний блок в () тэгах
>ib
# сдвинуть вправо блок в <> тэгах
>at
# сдвинуть влево 3 строки
3==
# сдвинуть влево блок с () или {} (курсор внутри скобок)
=%
# сдвинуть влево внутренний блок в {} тэгах
=iB
# сдвинуть влево entire buffer
gg=G
# вставить и добавить отступ к текущей строке
]p
# переключить регистр выделенного текста
~
# привести выделенный текст к нижнему регистру
u
# привести выделенный текст к верхнему регистру
U
# для табуляции используется N пробелов
set tabstop=N
# в командах отступа используется N пробелов
set shiftwidth=N
# заменять ли табуляцию на соответствующее число пробелов
set [no]expandtab
# выйти из режима выделения текста
Esc

#### Подсветка выбранного ####
## Plugin 't9md/vim-quickhl' ##
# подсветить выбранное
Space+m
# подсветить слово
Space+w
# убрать подсветку выбранного
Space+c
# убрать всю подсветку
Space+M
# подсветить cword-toggle
Space+j
# подсветить tag-toggle
Space+]
# operator-quickhl-manual-this-motion
H

#### Удаление/вставка ####
# вырезать (удалить) следующий символ
DEL
# вырезать (удалить) текущий символ
x
# вырезать (удалить) выделенный текст
d
# вырезать (удалить) слово
dw
# вырезать (удалить) до конца строки
D или d$
# вырезать (удалить) строку
dd
# вырезать (удалить) N строк
Ndd
# вырезать (удалить) N+1 строку
Nd
# вырезать (удалить) и начать редактирование
cc
# вырезать (удалить) параграф
dip
# вырезать (удалить) содержимое скобок
di(
# вырезать (удалить) содержимое скобок и сами скобки
da[
# вырезать (удалить) до следующей точки
dt.
# вставить после курсора
p
# вставить перед курсором
P или [p
# поменять две буквы местами (удалить и вставить)
xp

#### Копирование ####
# копировать выделенный текст
y
# копировать слово????????????????????????????????????
yiw
# копировать слово????????????????????????????????????
yw
# копировать до конца строки
y$
# копировать строку
yy
# копировать 2 строки????????????????????????????????????
2yy
# копировать N строк????????????????????????????????????
yNy
# копировать N+1 строку
Ny
# копировать в буфер обмена строки с N до M включительно
N,M ya

#### Регистры ####
# последний yank (позиция курсора в файле)
0
# безымянный регистр, последнее удаленное или yank
"
# имя текущего файла
%
# альтернативное имя текущего файла
#
# содержимое буфера обмена (X11 primary)
*
# содержимое буфера обмена (X11 clipboard)
+
# последнее поисковое выражение
/
# последний ввод командной строки
:
# последний вставленный текст
.
# последнее малое удаление (меньше строки)
-
# регистр математических выражений
=
# black hole регистр
_
# показать содержимое регистров
:reg[isters]
# поместить содержимое в регистр x
"xy
# копировать строку в регистр x
"xyy
# вырезать строку и поместить в регистр х
"хdd
# вырезать три строки и дописать в конец регистра х
"х2d
# вставить содержимое регистра x
"xp
# yank в системный буфер обмена
"+y
# вставить из системного буфера обмена
"+p

#### Метки (Маркеры) ####
# список меток
:marks
# установить локальную метку 'a' на текущей позиции
ma
# установить глобальную метку 'B' на текущей позиции
mB
# перейти к локальной метке 'c'
`c
# скопировать до метки 'a'
y`a
# вернуться на позицию, на которой закончили работу при закрытии vim
`0
# вернуться на позицию последнего редактирования в файле 
`"
# вернуться на позицию последнего изменения в файле
`.
# список перемещений
:ju[mps]
# перейти на самую новую позицию в списке переходов
Ctrl + i
# перейти на самую старую позицию в списке переходов
Ctrl + o
# вернуться на позицию перед последним перемещением
``
# список изменений
:changes
# перейти на самую новую позицию в списке изменений
g,
# перейти на самую старую позицию в списке изменений
g;
# перейти на тэг под курсором
Ctrl + ]

#### Макросы ####
# записать макрос 'a'
qa
# остановить запись макроса
q
# выполнить макрос 'a'
@a
# повторить последний макрос
@@

#### Поиск и замена в файле ####
# поиск шаблона
/pattern
# обратный поиск шаблона
?pattern
# поиск без учета регистра
\cpattern
# 'very magic' режим: все не алфавитно-цифровые символы интерпретируются как специальные (экранирование не требуется)
\vpattern
# следующее совпадение
n
# предыдущее совпадение
N
# заменить все вхождения шаблона в файл на указанное значение
:%s/old/new/g
# заменить все вхождения шаблона в файл на указанное значение с подтверждением
:%s/old/new/gc
# замена строк, см http://eax.me/regular-expr/
:%s/old/new/gi
# отключить подсвечивание результатов поиска
:noh[lsearch]

#### Поиск в нескольких файлах ####
# поиск по шаблону в нескольких файлах
:vim[grep] /pattern/ {`{file}`}
# поиск по регулярному выражению
:vimgrep /EXPR/ **/*.c
# открыть окно со списком результатов
:cope[n]
# скрыть все найденные места??????????????????????????????
:ccl[ose]
# скрыть все найденные места
:cl[ose]
# переместиться к следующему совпадению
:cn[ext]
# переместиться к предыдущему совпадению
:cp[revious]

#### Вкладки (табы) ####
# создать вкладку
:tabnew [fname]
# открыть файл в новой вкладке
:tabnew или :tabnew {page.words.file}
# переместить текущее окно в собственную вкладку
Ctrl + wT
# вывести список вкладок
:tabs
# следующую вкладку
:tabn
# предыдущую вкладку
:tabp
# переключить на вкладку номер N
Ngt
# переключиться на следующую вкладку
gt или :tabn[ext]
# переключиться на предыдущую вкладку
gT или :tabp[revious]
# переместить текущую вкладку на N позицию (нумерация с 0)
:tabm[ove] N
# переместить вкладку вперед на одну позицию
:tabm +1
# переместить вкладку назад на одну позицию
:tabm -1
# закрыть текущую вкладку и все её окна
:tabc[lose]
# закрыть все вкладки, кроме текущей
:tabo[nly]
# выполнить command на всех вкладках (к примеру :tabdo q - закрывает все открытые вкладки)
:tabdo command

#### Сворачивание ####
# свернуть блок
zc
# развернуть блок
zo
# свернуть все блоки на один уровень
zm
# закрыть все блоки
zM
# развернуть все блоки на один уровень
zr
# свернуть все блоки
zR
# переключить состояние блока под курсором
za
# переключить состояние блока под курсором на всех уровнях
zA
# включить свoрачивание
:set foldenable
# сворачивание на основе синтаксиса
:set foldmethod=syntax
# сворачивание на основе отступов
:set foldmethod=indent
# сворачивание на основе маркеров в тексте
:set foldmethod=marker
# задаем маркеры начала и конца блока
:set foldmarker=bigin,end
# вручную выделяем участок с помощью v и сворачиваем
zf или :set foldmethod=manual
# удалить свернутый блок под курсором
zd
# включить/выключить сворачивание блоков
zi

#### Сравнение файлов ####
# переход к началу следующего изменения
]c
# переход к началу предыдущего изменения
[c
# получить (get) различия (из другого буфера)
do или :diffg[et]
# отправить различия (в другой буфер)
dp или :diffpu[t]
# добавить текущее окно к сравнению
:diffthis
# обновить различия
:dif[fupdate]
# убрать текущее окно из сравнения
:diffo[ff]

#### Комментарии ####
## Plugin 'preservim/nerdcommenter' ##
# закомментировать текущую строку или выделенный текст в visual mode
[count]<leader>cc
# закомментировать выбранные строки с помощью красивого блочного форматированного макета
[count]<leader>cs
# тоже, что <leader>cc, но сильнее вложенность
[count]<leader>cn
# тоже, что <leader>cc, за исключением того, что разделители выровнены по левой стороне
[count]<leader>cl
# тоже, что <leader>cc, за исключением того, что разделители выровнены по обеим сторонам
[count]<leader>cb
# тоже, что <leader>cc, за исключением того, что сначала "yanked" комментируемые строки
[count]<leader>cy
# комментирует выбранные строки, используя только один набор разделителей
[count]<leader>cm
# переключается на альтернативный набор разделителей (если они предусмотрены)
<leader>ca
# переключить состояние комментирования для выбранных строк индивидуально
[count]<leader>ci
# переключить состояние комментирования для выбранных строк. Зависит от состояния верхней выбранной строки
[count]<leader>c<space>
# комментирует текущую строку от курсора до конца строки
<leader>c$
# добавляет разделители комментариев в конец строки и переходит в режим вставки между ними
<leader>cA
# раскоментировать выбранные строки
[count]<leader>cu

#### Окружения ####
## Plugin 'tpope/vim-surround' ##
# удалить окружение (Normal mode)
ds
# изменить окружение (Normal mode)
cs
# добавить окружение (Normal mode)
ys
# размещает элементы окружения на отдельных строках, добавляет отступ (Normal mode)
yS
# окружает целую строку (Normal mode)
yss
# окружает целую строку, размещает элементы окружения на отдельных строках, добавляет отступ (Normal mode)
ySs (ySS)
 добавляет пробелы, { без пробелов (Normal mode)
# }
# добавить окружение (Visual mode)
s
# размещает элементы окружения на отдельных строках, добавляет отступ (Visual mode)
S
# добавить окружение (Insert mode)
<Ctrl-s> (<Ctrl-g>s)
# размещает элементы окружения на отдельных строках, добавляет отступ (Insert mode)
<Ctrl-s><Ctrl-s> (<Ctrl-g>S)

#### Сессии ####
# сохранить текущую сессию
mksession file.session
# восстановить ранее сохраненную сессию
source file.session

#### Подсветка синтаксиса ####
# включить подсветку
:syntax on
# выключить подсветку
:syntax off

#### Перенос строк ####
# разрешить word wrap (по умолчанию)
:set wrap
# запретить word wrap
:set nowrap

#### Нумерация строк ####
# включить нумерацию строк
:set number
# отключить нумерацию строк
:set nonumber

#### Проверка орфографии ####
# включить проверку орфографии
:set spell spelllang=ru,en
# выключить проверку орфографии
:set nospell
# следующее слово с ошибкой
]s
# предыдущее слово с ошибкой
[s
# замена слова на альтернативу из списка
z=
# добавить слово в словарь
zg
# удалить слово из словаря
zw
# пропустить слово
zG

#### Работа с кодировкой ####
# Редактирование файла в кодировке <имя кодировки>
e ++enc=<имя кодировки>
# Сохранить файл в новой кодировке
w ++enc=<имя кодировки>
# Список автоматически определяемых кодировок в порядке убывания приоритета
set fileencodings=utf-8,koi8-r

#### Печать ####
# распечатать документ
:ha[rdcopy]
# отключить двустороннюю печать
:set printoptions=duplex:off

#### Команды ####
# текущий каталог
:pwd
# перейти в другой каталог
:cd [path]
# выполнить команду - man, git, и так далее стрелочками вверх и вниз можно автодополнять команды и искать по истории
:!команда
# выбор цветовой схемы
:color <name>
# при автодополнении в командной строке над ней выводятся возможные варианты
:set [no]wildmenu
# отображать табуляцию и переводы строк
:set list
# история команд
q:
# повторение последней команды
.
# добавить аббревиатуру
:ab [сокращение] [полное выражение]
# автоматическое дополнение текста (в режиме редактирования)
Tab или Ctrl+p
# шестнадцатеричный редактор (:%!xxd -r обратно)
:%!xxd
# текущий файл в виде веб-страницы
:%Tohtml
# вставить выражение, например 5*2 - 3 (в режиме редактирования)
Ctrl+r,=,<expr>
# показать номер текущей строки, общее число строк в файле и его имя
Ctrl+G

#### Latex ####
# начать (остановить) компиляцию документа
\ll
# открыть просмотрщик и/или осуществить прямой поиск
\lv
# остановить процесс компиляции
\lk
# проверить log-файл на наличие ошибок и предупреждений
\le
# очистить вспомогательные файлы
\lc
