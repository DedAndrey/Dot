== Общее ==
:h[elp] keyword - открыть помощь для keyword
:sav[eas] file - сохранить как file
:clo[se] - закрыть текущую панель
:ter[minal] - открыть окно терминала
K - открыть справочное руководство для слова под курсором

== Редактирование файлов ==
:e[dit] **/filename.c - редактировать файл (с поиском по имени)
:w [fname] - сохранить файл, но не выходить
:wa - сохранить изменения во всех файлах
:wqa - сохранить изменения и выйти во всех файлах
:wq или :x или ZZ - сохранить файл и выйти
:w !sudo tee % - сохранение по root'ом
:q - выйти из редактора (терпит неудачу в случае несохраненных изменений)
:q! или ZQ - выйти из редактора, не сохраняя изменения
:earlier 1m - возвращаем предыдущее состояние документа
:later - возврат к последнему состоянию документа

== Редактирование нескольких файлов (Буферы) ==

:e[dit] file - редактировать файл в новом буфере
:bn[ext] - перейти к следующему буферу
:bp[revious] - перейти к предыдущему буферу
:bd[elete] - удалить буфер (закрыть файл)
:b[uffer]# - перейти к буферу #
:b[uffer] file - перейти к буферу file
:ls или :buffers - список всех открытых буферов
:sp[lit] file - открыть файл в новом буфере и разделить окно
:vs[plit] file - открыть файл в новом буфере и вертикально разделить окно
:vert[ical] ba[ll] - редактировать все буферы как вертикальные окна
:tab ba[ll] - редактировать все буферы как вкладки
Ctrl + ws - разделить окно
Ctrl + wv - разделить окно вертикально
Ctrl + ww - переключение окон
Ctrl + wq - закрыть окно
Ctrl + wx - поменять местами текущее окно со следующим
Ctrl + w= - выровнять размеры всех окон
Ctrl + wh - переместить курсор в левое окно (вертикально разделение)
Ctrl + wl - переместить курсор в правое окно (вертикальное разделение)
Ctrl + wj - переместить курсор в окно ниже (горизонтальное разделение)
Ctrl + wk - переместить курсор в окно выше (горизонтальное разделение)

Plugin 'jeetsukumaran/vim-buffergator'
<leader> - обычно это \

<Leader>b - окно со списком всех буферов
<Leader>B или q - закрыть окно со списком всех буферов
<Leader>to - окно со списком всех вкладок
<Leader>tc или q - закрыть окно со списком всех вкладок
Ctrl-N (или SPACE) - пролистать список буферов
Ctrl-P (или Ctrl-SPACE) - в обратную сторону

o или ENTER - открыть
go или - открыть, но оставить фокус на списке
s или Ctrl-S - открыть в новом горизонтальном сплите
S или - открыть в новом горизонтальном сплите, но оставить фокус на списке
i или Ctrl-V - открыть в новом вертикальном сплите
I или - открыть в новом вертикальном сплите, но оставить фокус на списке
t или Ctrl-T - открыть в новой вкладке

gb (или Мета-b) - пролистать стек буферов, не открывая список
gB (или Мета-Shift-b) - в обратную сторону
(number)[b - перейти к буферу по номеру
(number)]b - в обратную сторону
\LEFT, \UP, \RIGHT, \DOWN - сплит нового окна

== Навигация ==
Добавьте число перед командой перемещения курсора для того, чтобы повторить её
h - передвинуть курсор влево
j - передвинуть курсор вниз
k - передвинуть курсор вверх
l - передвинуть курсор вправо
H - переместиться к началу экрана
M - переместиться к середине экрана
L - переместиться к концу экрана
w - переместиться вперед на начало слова
W - переместиться вперед на начало слова (слово может содержать пунктуацию)
e - переместиться вперед на конец слова
E - переместиться вперед на конец слова (слово может содержать пунктуацию)
b - переместиться назад на начало слова
B - переместиться назад на начало слова (слово может содержать пунктуацию)
% - перейти к парному символу (поддерживаются пары: '()', '{}', '[]')
0 - переместиться на начало строки
^ - переместиться на первый непробельный символ строки
$ - переместиться на конец строки
g_ - переместиться к последнему непустому символу в строке
gg - переместиться на первую строку документа
G - переместиться на последнюю строку документа
5gg или 5G - переместиться на пятую строку
:<n> - перейти на строку #n
fx - переместиться к следующему вхождению символа x
tx - переместиться перед следующим вхождением символа x
Fx - переместиться к предыдущему вхождению символа x
Tx - переместиться перед предыдущим вхождением символа x
; - повторить предыдущее f, t, F или T перемещение
, - повторить предыдущее f, t, F или T перемещение, в обратную сторону
} - переместиться к следующему параграфу (или функции/блоку при редактировании кода)
{ - переместиться к предыдущему параграфу (или функции/блоку при редактировании кода)
zz - перемотка. текст под курсором остается по центру
Ctrl + e - перемотка вверх без движения курсора
Ctrl + y - перемотка вниз без движения курсора
Ctrl + b - переместиться назад на целый экран
Ctrl + u - переместиться назад на половину экрана
Ctrl + f - переместиться вперед на целый экран
Ctrl + d - переместиться вперед на половину экрана
Ctrl + o - возвращение к предыдущему местонахождению
Ctrl + i - возвращение к первоначальному местонахождению

== Вставка/Добавление ==
i - вставка перед курсором
I - вставка в начало строки
a - вставка (добавление) после курсора
A - вставка (добавление) в конец строки
o - добавление новой строки под текущей
O - добавление новой строки над текущей
ea - вставка (добавление) после конца слова
Ctrl + h - удаление символа перед курсором в режиме вставки
Ctrl + w - удаление слова перед курсором в режиме вставки
Ctrl + j - начало новой строки в режиме вставки
Ctrl + t - отступ (перемещение вправо) строки на один шаг в режиме вставки
Ctrl + d - реотступ (перемещение влево) строки на один шаг в режиме вставки
Ctrl + n - вставка (автозавершение) следующего совпадения перед курсором в режиме вставки
Ctrl + p - вставка (автозавершение) предыдущего совпадения перед курсором в режиме вставки
Ctrl + rx - вставить содержимое регистра x
Esc - выход из режима вставки

== Редактирование ==
r - заменить один символ
R - писать поверх имеющегося текста??????????????????????????????????????????????????????
J - присоединить нижнюю строку к текущей
gJ - присоединить нижнюю строку к текущей без пробела между ними
gwip - reflow параграф
g~ - переключить регистр текста
gu - привести к нижнему регистру
gU - привести к верхнему регистру
cc - заменить всю строку
C или c$ - заменить до конца строки????????????????????????????????????????????????????????
cw - заменить до конца слова
ciw - заменить слово
s - удалить символ и заменить текст
S - удалить строку и заменить текст (то же что cc)
xp - переставить две буквы (удалить и вставить)
u или :u[ndo] - отмена предыдущего действия (undo)
U - восстановить (undo) последнюю измененную строку
Ctrl + r или :red[o] - отмена отмены предыдущего действия (redo)
. - повторить последнюю команду

== Выделение ==
v - включить режим выделения текста
V - включить построчный режим выделения
o - переместиться на другой конец выделенной области
Ctrl + v - включить режим выделения блоком
O - переместить на другой угол блока

aw, viw - выделить слово???????????????????????????????????????????????????????????
Shift + v или 0v$ - выделить строку
vNj - выделить на N строк вниз
^v$ - выделить строку, начиная с первого непробельного символа
vi( - выделить все между ближайшими, в данном случае круглыми, скобками
va( - выделить все между ближайшими, в данном случае круглыми, включая сами скобки
vt, - выделить все до ближайшей запятой
vip - выделить параграф
ab - блок в () тэгах
aB - блок в {} тэгах
at - блок в <> тэгах
 - Вместо b и B можно использовать ( и { соответственно
ib - внутренний блок в () тэгах
iB - внутренний блок в {} тэгах
it - внутренний блок в <> тэгах

> - сдвинуть текст вправо
< - сдвинуть текст влево
>> - сдвинуть строку вправо
<< - сдвинуть строку влево
>% - сдвинуть вправо блок с () или {} (курсор внутри скобок)
>ib - сдвинуть вправо внутренний блок в () тэгах
>at - сдвинуть вправо блок в <> тэгах
3== - сдвинуть влево 3 строки
=% - сдвинуть влево блок с () или {} (курсор внутри скобок)
=iB - сдвинуть влево внутренний блок в {} тэгах
gg=G - сдвинуть влево entire buffer
]p - вставить и добавить отступ к текущей строке

~ - переключить регистр выделенного текста
u - привести выделенный текст к нижнему регистру
U - привести выделенный текст к верхнему регистру

set tabstop=# - для табуляции используется # пробелов
set shiftwidth=# - в командах отступа используется # пробелов
set [no]expandtab - заменять ли табуляцию на соответствующее число пробелов
Esc - выйти из режима выделения текста

== Подсветка выбранного ==
Plugin 't9md/vim-quickhl'
Space+m - подсветить выбранное
Space+w - подсветить слово
Space+c - убрать подсветку выбранного
Space+M - убрать всю подсветку

Space+j - подсветить cword-toggle
Space+] - подсветить tag-toggle
H - operator-quickhl-manual-this-motion

== Удаление/вставка ==
DEL - удалить следующий символ
x - удалить текущий символ
d - удалить выделенный текст
dw - удалить (вырезать) слово
D или d$ - удалить (вырезать) до конца строки 
dd - вырезать (удалить) строку
Ndd - вырезать (удалить) N строк
#d - вырезать (удалить) #+1 строку
cc - вырезать (удалить) и начать редактирование
dip - вырезать (удалить) параграф
di( - вырезать (удалить) содержимое скобок
da[ - вырезать (удалить) содержимое скобок и сами скобки
dt. - вырезать (удалить) до следующей точки
p - вставить после курсора
P или [p - вставить перед курсором
xp - поменять две буквы местами

== Копирование ==
y - скопировать выделенный текст
yiw - копировать слово????????????????????????????????????
yw - скопировать слово
y$ - скопировать до конца строки 
yy - копировать строку
2yy - скопировать 2 строки
yNy - копировать N строк
#y - копировать #+1 строку
N,M ya - копировать в буфер обмена строки с N до M включительно

== Регистры ==
Специальные регистры:
0 - последний yank (позицию курсора в файле)
" - безымянный регистр, последнее удаленное или yank
% - имя текущего файла
# - альтернативное имя текущего файла
* - содержимое буфера обмена (X11 primary)
+ - содержимое буфера обмена (X11 clipboard)
/ - последнее поисковое выражение
: - последний ввод командной строки
. - последний вставленный текст
- - последнее малое удаление (меньше строки)
= - регистр математических выражений
_ - black hole регистр

:reg[isters] - показать содержимое регистров
"xy - поместить содержимое в регистр x
"xyy - копировать строку в регистр x
"хdd - вырезать строку и поместить в регистр х
"х2d - вырезать три строки и дописать в конец регистра х
"xp - вставить содержимое регистра x
"+y - yank в системный буфер обмена
"+p - вставить из системного буфера обмена
Содержимое регистров сохраняется в ~/.viminfo, восстанавливаясь при следующем запуске vim.

== Метки (Маркеры) ==
:marks - список меток
ma - установить локальную метку 'a' на текущей позиции
mB - установить глобальную метку 'B' на текущей позиции
`c - перейти к локальной метке 'c'
y`a - скопировать до метки 'a'
`0 - вернуться на позицию, на которой закончили работу при закрытии vim
`" - вернуться на позицию последнего редактирования в файле 
`. - вернуться на позицию последнего изменения в файле

:ju[mps] - список перемещений
Ctrl + i - перейти на самую новую позицию в списке переходов
Ctrl + o - перейти на самую старую позицию в списке переходов
`` - вернуться на позицию перед последним перемещением

:changes - список изменений
g, - перейти на самую новую позицию в списке изменений
g; - перейти на самую старую позицию в списке изменений
Ctrl + ] - перейти на тэг под курсором

Метки пишутся в ~/.viminfo, восстанавливаясь при следующем запуске vim.

== Макросы ==
qa - записать макрос 'a'
q - остановить запись макроса
@a - выполнить макрос 'a'
@@ - повторить последний макрос

== Поиск и замена в файле ==
/pattern - поиск шаблона
?pattern - обратный поиск шаблона
\cpattern - поиск без учета регистра
\vpattern - 'very magic' режим: все не алфавитно-цифровые символы интерпретируются как специальные (экранирование не требуется)
n - следующее совпадение
N - предыдущее совпадение
:%s/old/new/g - заменить все вхождения шаблона в файл на указанное значение
:%s/old/new/gc - заменить все вхождения шаблона в файл на указанное значение с подтверждением
:%s/old/new/gi - замена строк, см http://eax.me/regular-expr/
:noh[lsearch] - отключить подсвечивание результатов поиска

== Поиск в нескольких файлах ==
:vim[grep] /pattern/ {`{file}`} - поиск по шаблону в нескольких файлах
:vimgrep /EXPR/ **/*.c - поиск по регулярному выражению
:cope[n] - открыть окно со списком результатов
:ccl[ose] - скрыть все найденные места??????????????????????????????
:cl[ose] - скрыть все найденные места
:cn[ext] - переместиться к следующему совпадению
:cp[revious] - переместиться к предыдущему совпадению

== Поиск CtrlP ==
Ctrl+P, затем
F5 - - чтобы очистить кэш для текущего каталога
Ctrl-f и Ctrl-b - переключить режимы
Ctrl-d - переключить на поиск по имени файла, а не по полному пути
Ctrl-r - переключиться в режим регулярных выражений
Ctrl-j, Ctrl-k или стрелочки - навигация по списку результатов
Ctrl-n, Ctrl-p - выбрать следующую/предыдущую строку в истории
Ctrl-y - создайте новый файл и его родительский каталог
Ctrl-z - множественное выделение файлов 
Ctrl-o - открыть выбранное

== Вкладки (табы) ==
:tabnew [fname] - создать вкладку
:tabnew или :tabnew {page.words.file} - открыть файл в новой вкладке
Ctrl + wT - переместить текущее окно в собственную вкладку

:tabs - вывести список вкладок
:tabn - следующую вкладку
:tabp - предыдущую вкладку
#gt - переключить на вкладку номер #
gt или :tabn[ext] - переключиться на следующую вкладку
gT или :tabp[revious] - переключиться на предыдущую вкладку
:tabm[ove] # - переместить текущую вкладку на # позицию (нумерация с 0)
:tabm +1 - переместить вкладку вперед на одну позицию
:tabm -1 - переместить вкладку назад на одну позицию
:tabc[lose] - закрыть текущую вкладку и все её окна
:tabo[nly] - закрыть все вкладки, кроме текущей
:tabdo command - выполнить command на всех вкладках (к примеру :tabdo q - закрывает все открытые вкладки)

== Сравнение файлов ==
zf - manually define a fold up to motion
zd - delete fold under the cursor
za - toggle fold under the cursor
zA - To operate on all levels
zo - open fold under the cursor
zc - close fold under the cursor
zr - reduce (open) all folds by one level
zm - fold more (close) all folds by one level
zi - toggle folding functionality
]c - jump to start of next change
[c - jump to start of previous change
do или :diffg[et] - получить (get) различия (из другого буфера)
dp или :diffpu[t] - отправить различия (в другой буфер)
:diffthis - добавить текущее окно к сравнению
:dif[fupdate] - обновить различия
:diffo[ff] - убрать текущее окно из сравнения

== Комментарии ==
Plugin 'preservim/nerdcommenter'
<leader> - обычно это \
[count]<leader>cc - закомментировать текущую строку или выделенный текст в visual mode
[count]<leader>cs - закомментировать выбранные строки с помощью красивого блочного форматированного макета
[count]<leader>cn - тоже, что cc, но сильнее вложенность
[count]<leader>cl - тоже, что cc, за исключением того, что разделители выровнены по левой стороне
[count]<leader>cb - тоже, что cc, за исключением того, что разделители выровнены по обеим сторонам
[count]<leader>cy - тоже, что cc, за исключением того, что сначала "yanked" комментируемые строки

[count]<leader>cm - комментирует выбранные строки, используя только один набор разделителей
<leader>ca - переключается на альтернативный набор разделителей (если они предусмотрены)

[count]<leader>ci - переключить состояние комментирования для выбранных строк индивидуально
[count]<leader>c<space> - переключить состояние комментирования для выбранных строк. Зависит от состояния верхней выбранной строки

<leader>c$ - комментирует текущую строку от курсора до конца строки
<leader>cA - добавляет разделители комментариев в конец строки и переходит в режим вставки между ними

[count]<leader>cu - раскоментировать выбранные строки

== Сворачивание ==
zc - свернуть блок
zo - развернуть блок
zM - закрыть все блоки
zR - открыть все блоки
za - инвертирование
zf - см :set foldmethod=manual
:set foldenable - включить свoрачивание
:set foldmethod=syntax - сворачивание на основе синтаксиса
:set foldmethod=indent - сворачивание на основе отступов
:set foldmethod=manual - выделяем участок с помощью v и говорим zf
:set foldmethod=marker - сворачивание на основе маркеров в тексте
:set foldmarker=bigin,end - задаем маркеры начала и конца блока

== Окружения ==
Plugin 'tpope/vim-surround'

Normal mode
-----------
ds - удалить окружение
cs - изменить окружение
ys - добавить окружение
yS - размещает элементы окружения на отдельных строках, добавляет отступ
yss - окружает целую строку
ySs (ySS) - окружает целую строку, размещает элементы окружения на отдельных строках, добавляет отступ
 - } добавляет пробелы, { без пробелов

Visual mode
-----------
s - добавить окружение
S - размещает элементы окружения на отдельных строках, добавляет отступ

Insert mode
-----------
<Ctrl-s> (<Ctrl-g>s) - добавить окружение
<Ctrl-s><Ctrl-s> (<Ctrl-g>S) - размещает элементы окружения на отдельных строках, добавляет отступ

== Работа с окнами ==
:split - горизонтальное разбиение
:vsplit - вертикальное разбиение
Ctrl+W, затем
с - - закрыть окно
+- - - изменение высоты текущего окна
<> - - изменение ширины текущего окна
= - - установить равный размер окон
hjkl или стрелочки - перемещение между окнами

== Боковая панель NERDTree ==
Plugin 'scrooloose/nerdtree'
<leader> - обычно это \

<leader>n - передать фокус
Ctrl+n - включить
Ctrl+t - переключить состояние отображения
Ctrl+f - поиск
Ctrl+W, <> - изменение ширины панели
Shift+A - распахнуть на весь экран

o или ENTER - открыть
go или - открыть, но оставить фокус на списке
s или Ctrl-S - открыть в новом горизонтальном сплите
S или - открыть в новом горизонтальном сплите, но оставить фокус на списке
i или Ctrl-V - открыть в новом вертикальном сплите
I или - открыть в новом вертикальном сплите, но оставить фокус на списке
t или Ctrl-T - открыть в новой вкладке

== Сессии ==
mksession file.session - сохранить текущую сессию
source file.session - восстановить ранее сохраненную сессию

== Подсветка синтаксиса ==
:syntax on - включить подсветку
:syntax off - выключить подсветку (по умолчанию)

== Перенос строк ==
:set wrap - разрешить word wrap (по умолчанию)
:set nowrap - запретить word wrap

== Нумерация строк ==
:set number - включить нумерацию строк
:set nonumber - отключить нумерацию строк

== Проверка орфографии ==
:set spell spelllang=ru,en - включить проверку орфографии
:set nospell - выключить проверку орфографии
]s - - следующее слово с ошибкой
[s - - предыдущее слово с ошибкой
z= - - замена слова на альтернативу из списка
zg - - good word
zw - - wrong word
zG - - ignore word

== Работа с кодировкой ==
e ++enc=<имя кодировки> - Редактирование файла в ??? кодировке
w ++enc=<имя кодировки> - Сохранить файл в новой кодировке
set fileencodings=utf-8,koi8-r - Список автоматически определяемых кодировок в порядке убывания приоритета

== Печать ==
:ha[rdcopy] - распечатать документ
:set printoptions=duplex:off - отключить двустороннюю печать

== Команды ==
:pwd - текущий каталог
:cd [path] - перейти в другой каталог
:!команда - выполнить команду - man, git, и так далее стрелочками вверх и вниз можно автодополнять команды и искать по истории
:color <name> - выбор цветовой схемы
:set [no]wildmenu - при автодополнении в командной строке над ней выводятся возможные варианты
:set list - отображать табуляцию и переводы строк
q: - - история команд
. - - повторение последней команды
:ab [сокращение] [полное выражение]
========
Tab или Ctrl+p - автоматическое дополнение текста (в режиме редактирования)
:%!xxd - шестнадцатеричный редактор (:%!xxd -r обратно)
:%Tohtml - текущий файл в виде веб-страницы
Ctrl+r,=,<expr> - вставить выражение, например 5*2 - 3 (в режиме редактирования)
Ctrl+G - номер текущей строки, общее число строк в файле и его имя

== Latex ==
:LLPStartPreview
:LLPStartPreview <root-filename>

The mappings generally start with <localleader>l   

Document navigation through
  table of content
  table of labels
  proper settings for 'include', 'includexpr', 'suffixesadd' and 'define', which among other things
    allow :h include-search and :h definition-search
    give enhanced gf command

Easy access to (online) documentation of packages
Word count (through texcount)
Motions
  Move between section boundaries with [[, [], ][, and ]]
  Move between environment boundaries with [m, [M, ]m, and ]M
  Move between math environment boundaries with [n, [N, ]n, and ]N
  Move between frame environment boundaries with [r, [R, ]r, and ]R
  Move between comment boundaries with [* and ]*
  Move between matching delimiters with %

Text objects
  ic ac Commands
  id ad Delimiters
  ie ae LaTeX environments
  i$ a$ Inline math structures
  iP aP Sections
  im am Items

Other mappings
  Delete the surrounding command, environment or delimiter with dsc/dse/ds$/dsd
  Change the surrounding command, environment or delimiter with csc/cse/cs$/csd
  Toggle starred command or environment with tsc/tse
  Toggle between e.g. () and \left(\right) with tsd
  Toggle (inline) fractions with tsf
  Close the current environment/delimiter in insert mode with ]]
  Insert new command with <F7>
  Convenient insert mode mappings for faster typing of e.g. maths
  Context menu on citations (e.g. \cite{...}) mapped to <cr>

Improved folding (:h 'foldexpr')
Improved indentation (:h 'indentexpr')

== Тэги ==
:GscopeFind {querytype} {name}
{querytype} corresponds to the actual cscope line interface numbers as well as default nvi commands:
0 or s: Find this symbol
1 or g: Find this definition
2 or d: Find functions called by this function
3 or c: Find functions calling this function
4 or t: Find this text string
6 or e: Find this egrep pattern
7 or f: Find this file
8 or i: Find files #including this file
9 or a: Find places where this symbol is assigned a value
